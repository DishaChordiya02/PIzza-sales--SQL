Basic:
--Retrieve the total number of orders placed.
SELECT count(order_id) as total_orders FROM orders ;

--Calculate the total revenue generated from pizza sales
SELECT 
    ROUND(SUM(order_details.quantity * pizzas.price),
            2) AS total_revenue
FROM
    order_details
        JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id;


--Identify the highest-priced pizza.
SELECT pizza_types.name, pizzas.price,pizzas.size
FROM pizza_types INNER JOIN pizzas
ON pizza_types.pizza_type_id=pizzas.pizza_type_id
ORDER BY price DESC
LIMIT 1 ;

--Identify the most common pizza size ordered.
SELECT pizzas.size,count(order_details.quantity) as order_count
FROM pizzas 
INNER JOIN order_details 
ON pizzas.pizza_id=order_details.pizza_id
GROUP BY pizzas.size
ORDER BY ORDER_COUNT DESC;

--List the top 5 most ordered pizza types along with their quantities.
SELECT pizza_types.name ,sum(order_details.quantity) as quantity
FROM pizzas
INNER JOIN pizza_types
ON pizzas.pizza_type_id=pizza_types.pizza_type_id
INNER JOIN order_details
ON pizzas.pizza_id=order_details.pizza_id
GROUP BY pizza_types.name
ORDER BY quantity DESC 
LIMIT 5;

Intermediate:
--Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT pizza_types.category,sum(order_details.quantity) as total_quantity
FROM pizzas
INNER JOIN order_details
ON pizzas.pizza_id=order_details.pizza_id
INNER JOIN pizza_types
ON pizzas.pizza_type_id=pizza_types.pizza_type_id
GROUP BY pizza_types.category
ORDER BY total_quantity DESC;

--Determine the distribution of orders by hour of the day.
SELECT order_id,hour(order_time) 
FROM orders
GROUP BY order_id;

--Join relevant tables to find the category-wise distribution of pizzas.
SELECT category,COUNT(name) 
FROM pizza_types
GROUP BY category;

--Group the orders by date and calculate the average number of pizzas ordered per day.
  SELECT round(avg(quantity),0)
  FROM 
  (SELECT orders.order_date,sum(order_details.quantity) as quantity
  FROM orders 
  INNER JOIN order_details
  ON orders.order_id=order_details.order_id
  GROUP BY order_date ) as order_quantity;
 
--Determine the top 3 most ordered pizza types based on revenue.
SELECT sum(order_details.quantity* pizzas.price) as revenue ,pizza_types.name
FROM pizzas
INNER JOIN order_details 
ON pizzas.pizza_id=order_details.pizza_id
INNER JOIN pizza_types
ON pizzas.pizza_type_id=pizza_types.pizza_type_id
GROUP BY pizza_types.name
ORDER BY revenue DESC LIMIT 3;

Advanced:
--Determine the top 3 most ordered pizza types based on revenue for each pizza category.
SELECT sum(order_details.quantity* pizzas.price) as revenue,pizza_types.category,pizza_types.name
FROM pizzas 
INNER JOIN order_details
ON pizzas.pizza_id= order_details.pizza_id
INNER JOIN pizza_types
ON pizzas.pizza_type_id=pizza_types.pizza_type_id
GROUP BY pizza_types.category,pizza_types.name
ORDER BY REVENUE DESC LIMIT 5;
